{"ast":null,"code":"var _jsxFileName = \"/Users/shenseanchen/Desktop/Full-Stack-Dev/reacter/PokemonList/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo, useRef } from 'react'; // import PokemonList from './PokemonList'\n// import axios from 'axios'\n// import Pagination from './Pagination';\n\nimport FunctionContextComponent from './FunctionContextComponent'; // import ClassContextComponent from './ClassContextComponent';\n\nimport { ThemeProvider } from './ThemeContext';\nimport Navbar from './Navbar';\nimport Home from \"./pages/Home\";\nimport PokemonListTab from \"./pages/PokemonListTab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  ////////\n  // Learn React Hooks - useState\n  ////////\n  // const [count, setCount] = useState( () => countInitial())\n  // The first thing 'count' is the current state, \n  // The second thing 'setCount' is the function that allows you to update that current state\n  const [username, setUsername] = useState('Sean');\n  const [state, setState] = useState({\n    count: 4,\n    theme: 'blue'\n  });\n  const count = state.count;\n  const theme = state.theme;\n\n  function countInitial() {\n    console.log('run function');\n    return 4;\n  }\n\n  function decrementCount() {\n    // setCount(count - 1)\n    // setCount(prevCount => prevCount - 1)\n    setState(prevState => {\n      return { ...prevState,\n        count: prevState.count - 1\n      };\n    });\n  }\n\n  function incrementCount() {\n    // setCount(prevCount => prevCount + 1)\n    setState(prevState => {\n      return { ...prevState,\n        count: prevState.count + 1\n      };\n    });\n  } ////////\n  // Learn React Hook - useEffect\n  ////////\n\n\n  const [resourceType, setResourceType] = useState('posts');\n  const [items, setItems] = useState([]); // console.log('Render')\n  // useEffect(() => {\n  //   console.log('Resource Type Changed')\n  // }, [resourceType])\n\n  useEffect(() => {\n    // fetch('https://pokeapi.co/api/v2/pokemon')\n    fetch('https://jsonplaceholder.typicode.com/' + resourceType) // fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(response => response.json()).then(json => setItems(json));\n  }, [resourceType]); ////////\n  // Window Width\n  ////////\n\n  const [windowWidth, setwindowWidth] = useState(window.innerWidth);\n\n  const handleResize = () => {\n    setwindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []); ////////\n  // useMemo: use memoization \n  // - cache values so that you don't recompute every time \n  ////////\n\n  const [number, setNumber] = useState(1);\n  const doubleNumber = useMemo(() => {\n    return slowFunction(number);\n  }, [number]); //will be called only when 'number' is changed\n  // const doubleNumber = useEffect(() => {\n  //   return slowFunction(number)\n  // }, [number])\n\n  function slowFunction(num) {\n    console.log('Calling Slow Function');\n\n    for (let i = 0; i <= 100000000; i++) {}\n\n    return num * 2;\n  } ////////\n  // useRef Hook: you can store values like useState, \n  // but it doesn't require re-rendering \n  // when you update the value as useState does\n  ////////\n\n\n  const [name, setName] = useState('');\n  const prevName = useRef('');\n  const renderCountRef = useRef(0);\n  const [renderCountState, setRenderCountState] = useState(0);\n  const inputRef = useRef();\n  useEffect(() => {\n    prevName.current = name;\n  }, [name]);\n  useEffect(() => {\n    renderCountRef.current = renderCountRef.current + 1; // setRenderCountState(renderCountState + 1)\n\n    console.log('count + 1');\n  }); // setRenderCountState(prevRenderCountState => {\n  //   return {...prevRenderCountState, renderCountState: 0}\n  // })\n\n  const reset_count = () => {\n    setRenderCountState(0);\n    renderCountRef.current = 0;\n  };\n\n  function focus() {\n    inputRef.current.focus();\n  } ////////\n  // useContext\n  // also learning why function component is much cleaner than a class component\n  ////////\n\n\n  const [darkTheme, setDarkTheme] = useState(true);\n\n  function toggleTheme() {\n    setDarkTheme(prevDarkTheme => !prevDarkTheme);\n  } ////////\n  // NavBar and Routing\n  ////////\n\n\n  let component;\n\n  switch (window.location.pathname) {\n    case \"/\":\n      component = /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }, this);\n      break;\n    // case \"/home\":\n    //   component = <Home />\n    //   break\n\n    case \"/pokemonlisttab\":\n      component = /*#__PURE__*/_jsxDEV(PokemonListTab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }, this);\n      break;\n  } ////////\n  // Return values\n  ////////\n  // if (loading) return \"Loading...\"\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), component, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), \"-- useContext demo -- \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      children: /*#__PURE__*/_jsxDEV(FunctionContextComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), \"-- useRef demo -- \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"My name is \", name, \",and it used to be \", prevName.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"I rendered \", renderCountRef.current, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Focus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset_count,\n      children: \"Set Render Time to Zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 12\n    }, this), \"-- useMemo demo -- \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: number,\n      onChange: e => setNumber(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: doubleNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), \"-- Window Width\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: windowWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 31\n    }, this), \"-- Learn React Hooks @useEffect -- \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setResourceType('posts'),\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setResourceType('users'),\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setResourceType('comments'),\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: resourceType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 14\n    }, this), \"-- Learn React Hooks @useState -- \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" Theme: \", theme, \" @\", username, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 48\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrementCount,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementCount,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n} // export const ThemeContext = React.createContext()\n\n\n_s(App, \"PFwfFD9cXUksnJYsRbiDDikg21A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","FunctionContextComponent","ThemeProvider","Navbar","Home","PokemonListTab","App","username","setUsername","state","setState","count","theme","countInitial","console","log","decrementCount","prevState","incrementCount","resourceType","setResourceType","items","setItems","fetch","then","response","json","windowWidth","setwindowWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","number","setNumber","doubleNumber","slowFunction","num","i","name","setName","prevName","renderCountRef","renderCountState","setRenderCountState","inputRef","current","reset_count","focus","darkTheme","setDarkTheme","toggleTheme","prevDarkTheme","component","location","pathname","e","target","value","parseInt","map","item","JSON","stringify"],"sources":["/Users/shenseanchen/Desktop/Full-Stack-Dev/reacter/PokemonList/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\n// import PokemonList from './PokemonList'\n// import axios from 'axios'\n// import Pagination from './Pagination';\n\nimport FunctionContextComponent from './FunctionContextComponent';\n// import ClassContextComponent from './ClassContextComponent';\nimport {ThemeProvider} from './ThemeContext'\n\nimport Navbar from './Navbar'\nimport Home from \"./pages/Home\"\nimport PokemonListTab from \"./pages/PokemonListTab\"\n\nfunction App() {\n  \n  \n\n  ////////\n  // Learn React Hooks - useState\n  ////////\n  // const [count, setCount] = useState( () => countInitial())\n  // The first thing 'count' is the current state, \n  // The second thing 'setCount' is the function that allows you to update that current state\n  const [username, setUsername] = useState('Sean')\n  const [state, setState] = useState({count: 4, theme: 'blue'})\n  const count = state.count\n  const theme = state.theme\n\n  function countInitial() {\n    console.log('run function')\n    return 4\n  }\n\n  function decrementCount() {\n    // setCount(count - 1)\n    // setCount(prevCount => prevCount - 1)\n    setState(prevState => {\n      return {...prevState, count: prevState.count - 1}\n    })\n\n  }\n\n  function incrementCount() {\n    // setCount(prevCount => prevCount + 1)\n    setState(prevState => {\n      return {...prevState, count: prevState.count + 1}\n    })\n  }\n\n  ////////\n  // Learn React Hook - useEffect\n  ////////\n  const [resourceType, setResourceType] = useState('posts')\n  const [items, setItems] = useState([])\n  \n  // console.log('Render')\n  // useEffect(() => {\n  //   console.log('Resource Type Changed')\n  // }, [resourceType])\n\n  useEffect( () => {\n    // fetch('https://pokeapi.co/api/v2/pokemon')\n    fetch('https://jsonplaceholder.typicode.com/'+ resourceType)\n    // fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(response => response.json())\n    .then(json => setItems(json))\n  }, [resourceType]) \n\n\n  ////////\n  // Window Width\n  ////////\n  const [windowWidth, setwindowWidth] = useState(window.innerWidth)\n\n  const handleResize = () => {\n    setwindowWidth(window.innerWidth)\n  }\n  useEffect(() => {\n    window.addEventListener('resize', handleResize)\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  ////////\n  // useMemo: use memoization \n  // - cache values so that you don't recompute every time \n  ////////\n  const [number, setNumber] = useState(1)\n  const doubleNumber = useMemo( () => {\n    return slowFunction(number)\n  }, [number]) //will be called only when 'number' is changed\n\n  // const doubleNumber = useEffect(() => {\n  //   return slowFunction(number)\n  // }, [number])\n\n  function slowFunction(num) {\n    console.log('Calling Slow Function')\n    for (let i = 0; i <= 100000000; i++) {}\n    return num * 2\n  }\n\n  ////////\n  // useRef Hook: you can store values like useState, \n  // but it doesn't require re-rendering \n  // when you update the value as useState does\n  ////////\n  const [name, setName] = useState('')\n  const prevName = useRef('')\n  const renderCountRef = useRef(0)\n  const [renderCountState, setRenderCountState] = useState(0)\n  const inputRef = useRef()\n\n  useEffect(() => {\n    prevName.current = name\n  }, [name])\n\n  useEffect(() => {\n    renderCountRef.current = renderCountRef.current + 1\n    // setRenderCountState(renderCountState + 1)\n    console.log('count + 1')\n  })\n\n  // setRenderCountState(prevRenderCountState => {\n  //   return {...prevRenderCountState, renderCountState: 0}\n  // })\n  const reset_count = () => {\n    setRenderCountState(0)\n    renderCountRef.current=0\n  }\n  \n  function focus() {\n    inputRef.current.focus()\n  }\n\n  ////////\n  // useContext\n  // also learning why function component is much cleaner than a class component\n  ////////\n  const [darkTheme, setDarkTheme] = useState(true)\n  function toggleTheme() {\n    setDarkTheme(prevDarkTheme => !prevDarkTheme)\n  }\n\n  ////////\n  // NavBar and Routing\n  ////////\n  let component\n  switch (window.location.pathname) {\n    case \"/\":\n      component = <Home />\n      break\n    // case \"/home\":\n    //   component = <Home />\n    //   break\n    case \"/pokemonlisttab\":\n      component = <PokemonListTab />\n      break\n  }\n\n  ////////\n  // Return values\n  ////////\n  // if (loading) return \"Loading...\"\n  return (\n    <>\n      <Navbar />\n      {component}\n      {/* <component /> */}\n\n      <br/>\n      -- useContext demo -- <br/>\n      <ThemeProvider>\n        <FunctionContextComponent/>\n        {/* <ClassContextComponent/> */}\n      </ThemeProvider>\n\n\n\n      -- useRef demo -- <br/>\n      <input ref={inputRef} value={name} onChange={e => setName(e.target.value)}></input>\n      <div>My name is {name},and it used to be {prevName.current}</div>\n      <div>I rendered {renderCountRef.current} times</div>\n      <button>Focus</button>\n      <button onClick={\n        reset_count}>Set Render Time to Zero</button>\n      <br/><br/>\n\n      -- useMemo demo -- <br/>\n      <input type=\"number\" value={number} onChange={e => setNumber(parseInt(e.target.value))}></input>\n      {/* <button onClick={doubleNumber}>Double Number</button> */}\n      <h2>{doubleNumber}</h2>\n\n      -- Window Width\n      <div>{windowWidth}</div><br/>\n\n\n      -- Learn React Hooks @useEffect -- <br/>\n      <div>\n        <button onClick={ () => setResourceType('posts') }>Posts</button>\n        <button onClick={ () => setResourceType('users') }>Users</button>\n        <button onClick={ () => setResourceType('comments') }>Comments</button>\n      </div>\n         <br/>\n        <h1>{resourceType}</h1>\n        {items.map(item => {\n          return <pre>{JSON.stringify(item)}</pre>\n        })}\n        <br/><br/>\n\n      \n\n      -- Learn React Hooks @useState -- <br/>\n      <span> Theme: {theme} @{username} </span><br/>\n      <button onClick={decrementCount}>-</button> \n      <span> {count} </span>\n      \n      <button onClick={incrementCount}>+</button>\n      <br/><br/>\n\n      \n   </>   \n  );\n}\n\n// export const ThemeContext = React.createContext()\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}